#!/usr/bin/env bash
# =================================
# sudo ./install 
# =================================
if [ "$EUID" -ne 0 ]
  then printf "Please run install with sudo!  sudo ./install "
  exit
fi

# go to root directory
cd /

# self-update 
echo
while true; do
	read -p "Can I please run my self-update? (y/n)" yn
    case $yn in
        [Yy]* ) apt update && apt dist-upgrade -y; break;;
        [Nn]* ) printf "\n Hey! I may not run correctly, so you had your chance and you blew it.\n"; break;;
        * ) printf "Please answer y or n or I will ask you again, and you don't want me wasting your time.\n.";;
    esac
done

echo

# test for jq
command -v jq >/dev/null 2>&1 || { 
    printf >&2 "I require jq but it's not installed, so I am installing it now.\n"; 
    # install jq for the json
    apt-get install jq
}
# test for youtube-dl
command -v youtube-dl >/dev/null 2>&1 || { 
    printf >&2 "I require youtube-dl but it's not installed, so I am installing it now.\n"; 

    # install youtube-dl 
    curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl

    # make it executable so we can run it
    chmod a+rx /usr/local/bin/youtube-dl
    
}

echo
printf "Installing configuration files...\n"
tar -xvf /home/pi/pi-tube/config.tar
echo
printf "Installing boot configuration files...\n"
tar -xvf /home/pi/pi-tube/booter.tar
echo

printf "\n --- giving VLC access to run as sudo ---\n"
sed -i 's/geteuid/getppid/' /usr/bin/vlc

while true; do
	read -p "Do you wish to set the PI_UID now? (y/n)" yn
    case $yn in
        [Yy]* ) nano /home/pi/pi-tube/config.sh; break;;
        [Nn]* ) printf "You can always edit the config.sh anytime.\nBye for now!"; break;;
        * ) printf "Please answer yes or no or I will ask you again.\n";;
    esac
done

# Configure WIFI SSID and Password (sudo)
printf 
read -p "Enter WIFI SSID: " SSID
read -p "Enter WIFI PASSWORD: " PASSWORD

# overwrite existing wpa configuration file
printf "ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n" > /etc/wpa_supplicant/wpa_supplicant.conf
printf "update_config=1\n" >> /etc/wpa_supplicant/wpa_supplicant.conf
printf "country=\"US\"\n\n" >> /etc/wpa_supplicant/wpa_supplicant.conf
printf "network={\nssid=\"${SSID}\"\npsk=\"${PASSWORD}\"\nkey_mgmt=WPA-PSK\n}\n" >> /etc/wpa_supplicant/wpa_supplicant.conf


# configure cron for boot to run as pi
# change to pi user for the following EOF
sudo -i -u pi bash << EOF
    # export current crontab to mycron
    crontab -l > mycron_old
    
    # write new mycron
    echo "@reboot /home/pi/pi-tube/fetch && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/pi-tube/last_cron && /home/pi/pi-tube/push" > mycron
    echo "*/15 * * * * /home/pi/pi-tube/fetch && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/pi-tube/last_cron && /home/pi/pi-tube/push" >> mycron

    # install new cron file
    crontab mycron
    rm mycron
EOF

# exit out
printf "\nWell done, young Jedi Commander!\n"
printf "The Omni-installation is now complete. Please reboot to begin process.\n"
exit 0;